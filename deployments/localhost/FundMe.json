{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1da9add5d8d8b03d0850ad222bf0ebf4d7f3dd5f9bcc7720b4d01394f4c19e28",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "915645",
    "logsBloom": "0x
    "blockHash": "0xf778f6df5f03163932309c359e6fc4c8b344331b9d48f729f1a62ae5d7360461",
    "transactionHash": "0x1da9add5d8d8b03d0850ad222bf0ebf4d7f3dd5f9bcc7720b4d01394f4c19e28",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "915645",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "3a28707fedc727d4d3be1926ff5bf6f5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// Get funds from users\\n// Withdraw funds\\n// Set a minimum funding value\\n\\n// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"Didn't Send enough\\\"\\n        );\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] = msg.value;\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        // require(msg.sender == owner, \\\"Sender is not a Owner!\\\");\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        //reset the array\\n        funders = new address[](0);\\n\\n        //transfer\\n        //payable(msg.sender).transfer(address(this).balance);\\n        //send\\n        //    bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        //    require(sendSuccess, \\\"Send fail\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    // function cheaperWithdraw() public payable onlyOwner{\\n    //     address[] memory funders = funders;\\n    //     for (\\n    //         uint256 funderIndex = 0;\\n    //         funderIndex < funders.length;\\n    //         funderIndex++\\n    //     ) {\\n    //         address funder = funders[funderIndex];\\n    //         addressToAmountFunded[funder] = 0;\\n    //     }\\n    //     funders = new address[](0);\\n    //     (bool callSuccess, ) = payable(msg.sender).call{\\n    //         value: address(this).balance\\n    //     }(\\\"\\\");\\n    //     require(callSuccess, \\\"Call failed\\\");\\n\\n    // }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner, \\\"Sender is not a Owner!\\\");\\n        if (msg.sender != i_owner) {\\n            revert FundMe__NotOwner();\\n        }\\n        _;\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return funders[index];\\n    }\\n    \\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n        return addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return priceFeed;\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0xbbdac38c61303a414247f910e4cb3919cfacfa010a60bf35c86280e8b52166b1\",\"license\":\"GPL-3.0\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.18;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // ABI\\n        // address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        //Eth in terms of Usd\\n        return uint256(price * 1e10);\\n    }\\n\\n    function getVersion(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        return priceFeed.version();\\n    }\\n\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0x6d5f683c8e14bfe2fd2b318bea18b59167365070322346204c414df7a34f1f7b\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100a05760003560e01c8063893d20e811610064578063893d20e8146101a05780639e87a5cd146101cb578063b60d4288146101f6578063d7b4750c14610200578063dba6335f1461023d578063dc0d3dff14610268576100af565b80630343fb25146100b95780633ccfd60b146100f65780633e47d6f31461010d5780636b69a5921461014a578063741bef1a14610175576100af565b366100af576100ad6102a5565b005b6100b76102a5565b005b3480156100c557600080fd5b506100e060048036038101906100db9190610975565b6103ce565b6040516100ed91906109bb565b60405180910390f35b34801561010257600080fd5b5061010b610417565b005b34801561011957600080fd5b50610134600480360381019061012f9190610975565b610657565b60405161014191906109bb565b60405180910390f35b34801561015657600080fd5b5061015f61066f565b60405161016c91906109bb565b60405180910390f35b34801561018157600080fd5b5061018a61067c565b6040516101979190610a35565b60405180910390f35b3480156101ac57600080fd5b506101b56106a2565b6040516101c29190610a5f565b60405180910390f35b3480156101d757600080fd5b506101e06106ca565b6040516101ed9190610a35565b60405180910390f35b6101fe6102a5565b005b34801561020c57600080fd5b5061022760048036038101906102229190610aa6565b6106f4565b6040516102349190610a5f565b60405180910390f35b34801561024957600080fd5b5061025261073b565b60405161025f9190610a5f565b60405180910390f35b34801561027457600080fd5b5061028f600480360381019061028a9190610aa6565b61075f565b60405161029c9190610a5f565b60405180910390f35b6802b5e3af16b18800006102e4600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461079e90919063ffffffff16565b1015610325576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031c90610b30565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461049c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105475760008082815481106104c1576104c0610b50565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053f90610bae565b91505061049f565b50600067ffffffffffffffff81111561056357610562610bf6565b5b6040519080825280602002602001820160405280156105915781602001602082028036833780820191505090505b50600090805190602001906105a792919061086b565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105ce90610c56565b60006040518083038185875af1925050503d806000811461060b576040519150601f19603f3d011682016040523d82523d6000602084013e610610565b606091505b5050905080610654576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161064b90610cb7565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b6802b5e3af16b188000081565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080828154811061070957610708610b50565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000818154811061076f57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806107aa836107da565b90506000670de0b6b3a764000085836107c39190610cd7565b6107cd9190610d48565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610828573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084c9190610e06565b5050509150506402540be400816108639190610e81565b915050919050565b8280548282559060005260206000209081019282156108e4579160200282015b828111156108e35782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061088b565b5b5090506108f191906108f5565b5090565b5b8082111561090e5760008160009055506001016108f6565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061094282610917565b9050919050565b61095281610937565b811461095d57600080fd5b50565b60008135905061096f81610949565b92915050565b60006020828403121561098b5761098a610912565b5b600061099984828501610960565b91505092915050565b6000819050919050565b6109b5816109a2565b82525050565b60006020820190506109d060008301846109ac565b92915050565b6000819050919050565b60006109fb6109f66109f184610917565b6109d6565b610917565b9050919050565b6000610a0d826109e0565b9050919050565b6000610a1f82610a02565b9050919050565b610a2f81610a14565b82525050565b6000602082019050610a4a6000830184610a26565b92915050565b610a5981610937565b82525050565b6000602082019050610a746000830184610a50565b92915050565b610a83816109a2565b8114610a8e57600080fd5b50565b600081359050610aa081610a7a565b92915050565b600060208284031215610abc57610abb610912565b5b6000610aca84828501610a91565b91505092915050565b600082825260208201905092915050565b7f4469646e27742053656e6420656e6f7567680000000000000000000000000000600082015250565b6000610b1a601283610ad3565b9150610b2582610ae4565b602082019050919050565b60006020820190508181036000830152610b4981610b0d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610bb9826109a2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610beb57610bea610b7f565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c40600083610c25565b9150610c4b82610c30565b600082019050919050565b6000610c6182610c33565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ca1600b83610ad3565b9150610cac82610c6b565b602082019050919050565b60006020820190508181036000830152610cd081610c94565b9050919050565b6000610ce2826109a2565b9150610ced836109a2565b9250828202610cfb816109a2565b91508282048414831517610d1257610d11610b7f565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610d53826109a2565b9150610d5e836109a2565b925082610d6e57610d6d610d19565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610d9881610d79565b8114610da357600080fd5b50565b600081519050610db581610d8f565b92915050565b6000819050919050565b610dce81610dbb565b8114610dd957600080fd5b50565b600081519050610deb81610dc5565b92915050565b600081519050610e0081610a7a565b92915050565b600080600080600060a08688031215610e2257610e21610912565b5b6000610e3088828901610da6565b9550506020610e4188828901610ddc565b9450506040610e5288828901610df1565b9350506060610e6388828901610df1565b9250506080610e7488828901610da6565b9150509295509295909350565b6000610e8c82610dbb565b9150610e9783610dbb565b9250828202610ea581610dbb565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610edd57610edc610b7f565b5b8282058414831517610ef257610ef1610b7f565b5b509291505056fea2646970667358221220d994178e1844d93521d95501fe4a06c94f9ffd05a40e496cdca7eb0d796412df64736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 65,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 70,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}